---
import type { CollectionEntry } from "astro:content";
import Hex from "../Hex.astro";
import { Icon } from "astro-icon/components";
import { toIcon } from "@/utils/icon";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import FormattedDate from "../common/FormattedDate.astro";
dayjs.extend(utc);

export interface Props {
  allPosts: CollectionEntry<"blog">[];
  current?: CollectionEntry<"blog">;
}

const { allPosts, current } = Astro.props;

const anim = {
  old: {
    name: "fade",
    duration: "0.5s",
    easing: "ease-in-out",
  },
  new: {
    name: "side-right",
    duration: "0.5s",
    easing: "ease-in-out",
  },
};
const customTransition = {
  forwards: anim,
  backwards: anim,
};
---

<style>
  #hexlists {
    overflow: visible !important;
  }
  .post-list {
    transition-property: all;
    transition: 200ms cubic-bezier(0, 0, 0.47, 1.55);
  }
  .post-list.selected {
    transform: translateX(0) !important;
    filter: drop-shadow(-10.4px 0px 0px rgb(75 85 99));
  }
  .post-list.selected .icon {
    rotate: 6deg;
  }
</style>
<ul
  id="hexlists"
  class="h-full pl-12 flex flex-col gap-6 overflow-y-auto transition-[margin-left]"
  transition:animate={customTransition}
  transition:persist
  transition:name="post-list"
  data-selected={current?.id}
>
  {
    allPosts.map(async (entry) => {
      const {
        id,
        slug,
        data: { title, tags, summary },
      } = entry;
      const { remarkPluginFrontmatter } = await entry.render();

      const lastModified = dayjs(remarkPluginFrontmatter.lastModified)
        .utc()
        .toDate()
      return (
        <li
          class="w-[100vw] post-list cursor-pointer"
          data-id={id}
          data-slug={slug}
        >
          <a href={`/blog/${slug}`} data-astro-prefetch>
            <Hex>
              <div
                slot="content"
                class="flex flex-row relative prose prose-h2:mb-2 prose-h2:mt-0"
              >
                <div class="w-fit min-w-64">
                  <h2 class="text-3xl pl-2">{title}</h2>
                  <p>{summary}</p>
                </div>
                <div class="flex gap-2 -z-10">
                  {tags.map((t) => (
                    <Icon class="w-24 h-24 icon" name={toIcon(t)} />
                  ))}
                </div>
              </div>
              <div slot="footer">
                <p>
                  <FormattedDate date={lastModified} />
                </p>
              </div>
            </Hex>
          </a>
        </li>
      );
    })
  }
</ul>
