---
import Layout from "@/layouts/Layout.astro";
import Hex from "@components/Hex.astro";
import PreviewPost from "@components/post/PreviewPost.astro";

import PostList from "@/components/post/PostList.astro";

import { getEntry, getEntries, getCollection } from "astro:content";

const blogPost = await getEntry("blog", "post-1");
let allPosts = await getCollection("blog");

// console.log(allPosts);
// allPosts = [...allPosts, ...allPosts];
// allPosts = [...allPosts, ...allPosts];
// allPosts = [...allPosts, ...allPosts];
---


<script>
  let container: HTMLElement | null;

  let hexlists: NodeListOf<HTMLLIElement>;
  let previews: NodeListOf<HTMLDivElement>;

  let selectedId: string;
  const pair = new Map<string, [HTMLLIElement | null, HTMLDivElement | null]>();
  document.addEventListener("astro:page-load", () => {
    container = document.getElementById("hexlists");
    hexlists = document.querySelectorAll<HTMLLIElement>("#hexlists .post-list");
    previews = document.querySelectorAll<HTMLDivElement>("#previews div");

    hexlists.forEach((li) => {
      const id = li.dataset.id;
      if (id) {
        pair.set(id, [li, null]); // 先将值设置为 null
      }
    });

    // 遍历 previews，根据 dataset.id 进行配对
    previews.forEach((div) => {
      const id = div.dataset.id;
      if (id && pair.has(id)) {
        const li = pair.get(id)?.[0] ?? null;
        pair.set(id, [li, div]); // 将对应的 div 存入 Map
      }
    });

    setOffset();
    container?.addEventListener("scroll", setOffset);

    hexlists.forEach((el, idx) => {
      const id = el.dataset["id"];
      if (id)
        el.addEventListener("mouseover", (e) => {
          switchSelected(id);
        });
    });

    switchSelected(pair.keys().next().value);
  });

  function setOffset() {
    if (!container) return;

    const containerRect = container.getBoundingClientRect();
    const containerHeight = containerRect.height; // 获取元素的位置信息
    hexlists.forEach((el, idx) => {
      const childRect = el.getBoundingClientRect();
      if (selectedId == el.dataset["id"]) {
        /*        const anim = el.animate([{ transform: "translateX(0)" }], 30);
        anim.addEventListener("finish", () => {
          el.style.transform = "unset";
        });
        */
        el.classList.add('selected')
        return;
      }

      const relativeY = childRect.top - containerRect.top;
      const delta = Math.min(relativeY, containerRect.height - relativeY);
      const calcML = (dy: number) => (dy < 0 ? -dy * 0.2 : dy * 0.8);

      // el.style.marginLeft = `${calcML(relativeY - containerRect.height * 0.7)}px`;
      el.style.transform = `translateX(${calcML(relativeY - containerRect.height * 0.7)}px)`;
    });
  }

  function switchSelected(id: string) {
    if (id == selectedId) {
      //location.assign(`?post=${id}`)
      return;
    } //TODO: jump
    const p = pair.get(id);
    if (!p) return;
    const [li, preview] = p;
    if (!li || !preview) {
      console.error(`post list or preview for ${id} not found`);
      return;
    }

    unselect(selectedId);

    preview.classList.remove("hidden");
    preview.classList.add("contents");
    preview.getElementsByClassName("preview-post")[0]?.classList.add("active")
    li.classList.add("selected");

    selectedId = id;

    setOffset();
    //li.style.marginLeft = '0px';
  }

  function unselect(id: string) {
    if (!id) return;
    const p = pair.get(id);
    if (!p) return;
    const [li, preview] = p;

    preview?.classList.add("hidden");
    preview?.getElementsByClassName("preview-post")[0]?.classList.remove("active")
    li?.classList.remove("selected")
  }
</script>

<Layout title="blog">
  <div class="flex h-[100vh] w-full">
    <div class="flex flex-grow-1  flex-col h-full w-[100vw] lg:w-[60vw]">
      <div id="previews" class="mt-[12%] w-full flex-1 p-8">
        {
          allPosts.map((entry, idx) => {
            return (
              <div
                class={"hidden"}
                data-id={entry.id}
              >
                <PreviewPost entry={entry} />
              </div>
            );
          })
        }
      </div>
    </div>
    <div class="max-w-[50%] lg:max-w-[40%] overflow-x-hidden">
      <PostList {allPosts} />
    </div>
  </div>
</Layout>
